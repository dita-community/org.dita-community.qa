<?xml version="1.0" encoding="UTF-8"?>
<!-- This file is part of the org.dita-community.qa project hosted on 
     Sourceforge.net.-->
<!-- (c) Copyright Ditanauts All Rights Reserved. -->
<project name="dita2qa" default="dita2qa">
	<property name="transtype" value="qa" />

	<target name="compilechecks">
		<xslt
			in="${dita.plugin.org.dita-community.qa.dir}/tools/qacompiler/qa_checks_r.dita"
			out="${dita.plugin.org.dita-community.qa.dir}/xsl/qachecks/_qa_checks_term.xsl"
			style="${dita.plugin.org.dita-community.qa.dir}/tools/qacompiler/qa_compiler.xsl"
			force="true" />
	</target>

	<condition property="if.chunk">
		<equals arg1="${setchunk}" arg2="true" casesensitive="false" />
	</condition>

	<target name="setchunk"
		description="Set @chunk to-content on the temp input bookmap" if="if.chunk">
		<replace file="${dita.temp.dir}/${user.input.file}"
			token="chunk=.to-content." value="" />
		<replace file="${dita.temp.dir}/${user.input.file}"
			token="&lt;bookmap " value="&lt;bookmap chunk='to-content' " />
		<replace file="${dita.temp.dir}/${user.input.file}"
			token="&lt;map " value="&lt;map chunk='to-content' " />
	</target>

	<target name="dita2qa" depends="build-init,preprocess">
		<copy todir="${output.dir}">
			<fileset
				dir="${dita.plugin.org.dita-community.qa.dir}/xsl/">
				<include name="log.xsl" />
			</fileset>
		</copy>
		<mkdir dir="${output.dir}/js" />
		<mkdir dir="${output.dir}/css" />
		<mkdir dir="${output.dir}/fonts" />
		<copy todir="${output.dir}/js">
			<fileset
				dir="${dita.plugin.org.dita-community.qa.dir}/xsl/js/">
				<include name="bootstrap.js" />
				<include name="bootstrap.min.js" />
				<include name="jquery.js" />
			</fileset>
		</copy>
		<copy todir="${output.dir}/css">
			<fileset
				dir="${dita.plugin.org.dita-community.qa.dir}/xsl/css/">
				<include name="qa_report.css" />
				<include name="popup_icon.jpg" />
				<include name="bootstrap.css" />
				<include name="bootstrap.min.css" />
				<include name="bootstrap-theme.css" />
				<include name="bootstrap-theme.min.css" />
			</fileset>
		</copy>
		<copy todir="${output.dir}/fonts">
			<fileset
				dir="${dita.plugin.org.dita-community.qa.dir}/xsl/fonts/">
				<include name="glyphicons-halflings-regular.eot" />
				<include name="glyphicons-halflings-regular.svg" />
				<include name="glyphicons-halflings-regular.ttf" />
				<include name="glyphicons-halflings-regular.woff" />
			</fileset>
		</copy>

		<condition property="args.xsl"
			value="${dita.plugin.org.dita-community.qa.dir}/xsl/qadata.xsl">
			<not>
				<isset property="args.xsl" />
			</not>
		</condition>
		<!-- build data file as dita topic -->
		<xslt processor="trax" basedir="${dita.temp.dir}" destdir="${dita.temp.dir}"
			includesfile="${dita.temp.dir}/${fullditatopicfile}"
			extension=".data" style="${args.xsl}">
			<excludesfile name="${dita.temp.dir}/${resourceonlyfile}"
				if="resourceonlyfile" />
			<!-- these parameters are referenced in the stylesheet -->
			<param name="input" expression="${args.input}" if="args.input" />
			<param name="fileroot" expression="${dita.map.filename.root}" />
			<param name="FILTERFILE" expression="${dita.input.valfile}"
				if="dita.input.valfile" />
			<param name="OUTPUTDIR" expression="${output.dir}" if="output.dir" />
			<param name="BASEDIR" expression="${basedir}" />
			<param name="tempInput" expression="${dita.temp.dir}${file.separator}${user.input.file}" />
		</xslt>
		<!-- move file to the output root -->
		<move todir="${output.dir}" flatten="true">
			<fileset dir="${dita.temp.dir}">
				<include name="**/${dita.map.filename.root}.data" />
			</fileset>
		</move>
		
		<!-- Java calls to perform same function as XSLT calls -->
		<!--<java classname="net.sf.saxon.Transform" fork="yes">
			<arg value="-r:org.apache.xml.resolver.tools.CatalogResolver"/>
			<arg value="-x:org.apache.xml.resolver.tools.ResolvingXMLReader"/>
			<arg value="-y:org.apache.xml.resolver.tools.ResolvingXMLReader"/>
			<jvmarg value="-Dxml.catalog.files=catalog-dita.xml"/>	
			<arg value="-xsl:${dita.plugin.org.dita-community.qa.dir}${file.separator}xsl${file.separator}qacsv.xsl"/>
			<arg value="-t"/>
			<arg value="-s:${output.dir}${file.separator}${dita.map.filename.root}.data"/>
			<arg value="-o:${output.dir}${file.separator}${dita.map.filename.root}-violations.csv"/>
		</java>
		<java classname="net.sf.saxon.Transform" fork="yes">
			<arg value="-r:org.apache.xml.resolver.tools.CatalogResolver"/>
			<arg value="-x:org.apache.xml.resolver.tools.ResolvingXMLReader"/>
			<arg value="-y:org.apache.xml.resolver.tools.ResolvingXMLReader"/>
			<jvmarg value="-Dxml.catalog.files=catalog-dita.xml"/>	
			<arg value="-xsl:${dita.plugin.org.dita-community.qa.dir}${file.separator}xsl${file.separator}qamap.xsl"/>
			<arg value="-t"/>
			<arg value="-s:${output.dir}${file.separator}${dita.map.filename.root}.data"/>
			<arg value="-o:${output.dir}${file.separator}${dita.map.filename.root}-violations.ditamap"/>
		</java>
		<java classname="net.sf.saxon.Transform" fork="yes">
			<arg value="-r:org.apache.xml.resolver.tools.CatalogResolver"/>
			<arg value="-x:org.apache.xml.resolver.tools.ResolvingXMLReader"/>
			<arg value="-y:org.apache.xml.resolver.tools.ResolvingXMLReader"/>
			<jvmarg value="-Dxml.catalog.files=catalog-dita.xml"/>	
			<arg value="-xsl:${dita.plugin.org.dita-community.qa.dir}${file.separator}xsl${file.separator}qareport.xsl"/>
			<arg value="-t"/>
			<arg value="-s:${output.dir}${file.separator}${dita.map.filename.root}.data"/>
			<arg value="-o:${output.dir}${file.separator}${dita.map.filename.root}-report.html"/>
		</java>-->

		<!-- Legacy XSLT tasks. Can be interchanged with java calls -->
		<xslt processor="trax"
			in="${output.dir}/${dita.map.filename.root}.dita"
			extension=".csv"
			style="${dita.plugin.org.dita-community.qa.dir}/xsl/qacsv.xsl"
			out="${output.dir}/${dita.map.filename.root}-violations.csv" />
		<xslt processor="trax"
			in="${output.dir}/${dita.map.filename.root}.dita"
			extension=".ditamap"
			style="${dita.plugin.org.dita-community.qa.dir}/xsl/qamap.xsl"
			out="${output.dir}/${dita.map.filename.root}-violations.ditamap" />
		<xslt processor="trax"
			in="${output.dir}/${dita.map.filename.root}.dita"
			extension=".html"
			style="${dita.plugin.org.dita-community.qa.dir}/xsl/qareport.xsl"
			out="${output.dir}/${dita.map.filename.root}-report.html" /> 
	</target>

</project>
